@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@inject IWebAssemblyHostEnvironment HostEnvironment
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Blazor chat</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @if (_user is null)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="users">
                    <span class="oi oi-person" aria-hidden="true"></span> Sign in
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="users/auth">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Log in
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="users/current">
                    <span class="oi oi-person" aria-hidden="true"></span> Current User
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@($"users/{_user.Id}")">
                    <span class="oi oi-chat" aria-hidden="true"></span> Your Chats
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="chats">
                    <span class="oi oi-chat" aria-hidden="true"></span> Create Chat
                </NavLink>
            </div>
        }
        @if (HostEnvironment.IsDevelopment())
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="swagger">
                    <span class="oi oi-script" aria-hidden="true"></span> Swagger
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private UserModel? _user;
    private bool _collapseNavMenu = true;

    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

    protected override async Task OnInitializedAsync() => await TryGetUser();

    private async Task TryGetUser()
    {
        Storage.CurrentUserUpdated += _ => StateHasChanged();
        var currentUser = await Storage.GetCurrentUserAsync();
        _user = currentUser;
    }
}