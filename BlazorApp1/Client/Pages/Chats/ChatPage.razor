@page "/chats/{ChatId:int}"
@inject ChatHubClient HubClient
@if (_chat is null)
{
    <Loading/>
}
else
{
    <h3>@_chat.Name</h3>
    <div>
        @foreach (var message in _messages.Values)
        {
            <div>
                <p>@message.SenderId: @message.Text</p>
            </div>
        }
    </div>
    <p>
        Text: <br/>
        <InputText @bind-Value="_text"/>
    </p>
    <button @onclick="SendMessage"> Отправить </button> <br/>
    <a href="chats/@_chat.Id/users"> Добавить пользователя в чат </a>
}

@code {
    private ChatModel? _chat;
    private Dictionary<int, MessageModel> _messages = new();
    private string _text = string.Empty;

    [Parameter]
    public int ChatId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        HubClient.OnMessageSent += AddMessage;
        await HubClient.StartAsync();
        await LoadData();
    }

    private async Task LoadData()
    {
        var chat = await Storage.GetChatAsync(ChatId);
        _chat = chat;
        _messages = _chat.Messages.ToDictionary(msg => msg.Id, msg => msg);
    }

    private async Task SendMessage()
    {
        if (_chat is null || _text == string.Empty)
        {
            return;
        }
        await HubClient.SendMessage(new SendMessageRequest { ChatId = _chat.Id, Text = _text });
        _text = string.Empty;
    }

    private void AddMessage(SendMessageResponse response)
    {
        _messages.Add(response.Message.Id, response.Message);
        StateHasChanged();
    }
}