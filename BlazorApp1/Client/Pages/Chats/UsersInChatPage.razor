@page "/chats/{ChatId:int}/users"
@if (_chat is null)
{
    <Loading/>
}
else
{
    <h3> Пользователи в чате @_chat.Name</h3>
    <table>
        <thead><tr><th>Id</th><th>Имя</th><th></th></tr></thead>
        <tbody>
        @foreach (var user in _users)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.Name</td>
                <td>
                    <a href="users/@user.Id"> Просмотреть </a>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <div>
            <p>
                User's id: <br/>
                <InputText @bind-Value="_newUserId"/>
            </p>
            <button @onclick="AddUserInChat" class="custom-button"> Add user </button>
    </div>
}

@code {
    private ChatModel? _chat;
    private UserModel[] _users = Array.Empty<UserModel>();
    private string? _newUserId;

    [Parameter]
    public int ChatId { get; set; }

    protected override async Task OnInitializedAsync() => await LoadData();

    private async Task LoadData()
    {
        var chat = await Storage.GetUsersInChatAsync(ChatId);
        _chat = chat;
        _users = _chat.Users;
    }

    private async Task AddUserInChat()
    {
        if (!IsUserIdCorrect())
        {
            return;
        }
        var userId = int.Parse(_newUserId!);
        await Storage.AddUserInChatAsync(ChatId, userId);
        await LoadData();
        _newUserId = null;
    }

    private bool IsUserIdCorrect()
    {
        return int.TryParse(_newUserId, out _) && _newUserId is not null;
    }
}